"use strict";

// 1. Напишите функцию hello1(), которая при вызове будет возвращать строку «Привет, JavaScript!».

function hello1() {
  let message = "Привет, JavaScript!";
  console.log(message);
}

hello1();

/* 2. Напишите функцию hello2(), которая при вызове будет принимать переменную name (например, «Василий») 
   и выводить строку (в нашем случае «Привет, Василий»).  В случае отсутствующего аргумента выводить «Привет, гость».*/

let greeting = "Привет! Как теб зовут?";
let userName = prompt(greeting);

function hello2() {
  let message = `Привет, ${userName}!`;

  if (userName === "" || userName === null) {
    message = "Привет, гость";
  }

  console.log(message);
}
hello2();

/* 3. Напишите функцию mul(n,m), которая принимает два аргумента и возвращает 
    произведение этих аргументов. Проверьте ее работу. */

let n = 5;
let m = 10;

function mul() {
  console.log(n * m);
}

mul();

/* 4. Создайте функцию repeat(str, n), которая возвращает строку, состоящую из n повторений строки str.
	  n — по умолчанию 2, str — пустая строка. */

let str = "";

function repeat() {
  let n = 2;
  console.log(str.repeat(n));
}

repeat();

/* 5. Создайте функцию rgb(a, b, c), которая будет принимать три числовых аргумента и возвращать строку вида «rgb(23,100,134)». 
	  Если аргументы не заданы, считать их равными нулю. Не проверять переменные на тип данных.*/

function rgb() {
  let a = prompt(`Введите числовой аргумент №1`);
  let b = prompt(`Введите числовой аргумент №2`);
  let c = prompt(`Введите числовой аргумент №3`);

  console.log(`rgb(${a ? a : 0}, ${b ? b : 0}, ${c ? c : 0})`);
}

rgb();

/* 6. Создайте функцию avg() , которая будет находить среднее значение арифмитическое значение своих аргументов.*/

function avg() {
  let value1 = 30;
  let value2 = 40;
  console.log((value1 + value2) / 2);
}

avg();

/* 7. Напишите функцию words(n), которая в зависимости от переданного в нее целочисленного аргумента n, будет выводить слово «товар» в нужной форме («12 товаров», но «22 товара»). По умолчанию аргумент n должен иметь значение 0.*/


function words() {
  let n = prompt("Введите число");
  n = Math.round(n);
  if (n == 1 || n == 21 || n == 31 || n == 41 || n == 51 || n == 61 || n == 71 || n == 81 || n == 91) {
    console.log(`В корзине ${n} товар`);
  } else {
    if (n >= 2 && n <= 4) {
      console.log(`В корзине ${n} товара`);
    } else if (n >= 5 && n <= 20) {
      console.log(`В корзине ${n} товаров`);
    }
  }
}

words();

/* 8. Задание со звездочкой. Пишем функцию решения квадратного уравнения через дискриминант:
		ax² + bx + c = 0 (общий вид уравнения)
		D = b2 – 4ac
		D > 0
		x1 = (-b + √D ) / 2a
		x2 = (-b – √D ) / 2a
		D = 0
		x = -b / 2a
		D < 0 - прекращаем решать уравнение; */

/* 9. Есть функция function f(x) {
				//Тело функции (ваш код здесь должен быть)
			}
	  Научиться отличать отсутсвие аргументов у функции или то что первый аргумент undefined. 
	  Если аргментов нет то функция возвращает 0, если аргмент undefined то возвращает 0. 
	  Дополнительное задание: реализовать функцию function f(x) как стрелочную.*/

/* 10. Написать функцию  sum(a, b), которая возвращает сумму переданных ей аргументов. Реализовать с помощью function declaration и с помощью стрелочной функции. !!!Использовать цикл "for in" если это возможно.*/

// 1 вариант

function sum1(a, b){
  return a+b;
}
console.log(sum1(1, 9));

// 2 вариант

const sum = (...args) => [...args].reduce((a, b) => a + b, 0);
console.log (sum(1, 9));

/* 11. Дан массив [1, 2, 56, 28, 90, 5, 6]. Отсортировать массив в порядке возрастания его элементов. В отсортированном массиве используя метод indexof вывести индекс элемента со значением "6". */

function compareNumeric(a, b) {
  if (a > b) return 1;
  if (a == b) return 0;
  if (a < b) return -1;
}

let arr = [1, 2, 56, 28, 90, 5, 6];
arr.sort(compareNumeric);
console.log(arr);

/* 12. Задание с прошлых занятий. Создать массив объектов для юзеров [{name: ‘Ivan’, age: 18}, {name: ‘Petr’, age: 12}, {name: ‘Sidor’, age: 25}, {name: ‘Pavel’, age: 24}, {name: ‘Sasha’, age: 29}]
	  Написать скрипт, который будет на выходе отдавать два массива. Первый с совершеннолетними пользователями, второй с несовершеннолетними.
	  !Использовать метод filter. Полученные на выходе два массива отсортировать (каждый из них в отдельности) 
           по старшинству членов (от самого старшего к самому младшему).*/